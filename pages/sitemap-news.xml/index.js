import { getServerSideSitemap } from "next-sitemap";
import { getNewsSummaries } from "../../lib/helpers";
import { sanitize } from "@utils/helpers";

const siteUrl = process.env.NEXT_PUBLIC_DOMAIN_URL;

export const getServerSideProps = async (ctx) => {
  try {
    // Fetch recent news summaries
    const { newsSummaries, noEventsFound } = await getNewsSummaries({
      maxResults: 100,
    });

    if (noEventsFound || !newsSummaries || newsSummaries.length === 0) {
      // Return an empty sitemap or handle as an error if preferred
      return getServerSideSitemap(ctx, []);
    }

    // Google News sitemap usually includes articles from the last 2 days,
    // but standard sitemaps can include older content.
    // Let's keep it simple and include all fetched news for a standard sitemap.
    // If filtering by date is still desired (e.g., last 30 days for general recency):
    const thirtyDaysAgo = new Date();
    thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);

    const recentNews =
      newsSummaries?.filter((article) => {
        const articleDate = article.start?.dateTime
          ? new Date(article.start.dateTime)
          : new Date(article.publicationDate || article.date || Date.now());
        return articleDate >= thirtyDaysAgo;
      }) || [];

    const fields = recentNews.map((article) => {
      // Ensure article.slug is available and correctly generated by getNewsSummaries/normalizeEvent
      const articleUrl = `${siteUrl}/noticies/${article.slug}`;
      console.log(article);
      const pubDate = article.start?.dateTime
        ? new Date(article.start.dateTime)
        : new Date(article.publicationDate || article.date || Date.now());

      // Determine image URL - adapt based on actual data structure from getNewsSummaries
      let imageUrl = `${siteUrl}/static/images/logo-cultura-cardedeu.png`; // Default fallback
      if (article.imageUploaded) {
        imageUrl = article.imageUploaded;
      } else if (
        article.images &&
        article.images.length > 0 &&
        article.images[0]
      ) {
        // Ensure the image path from article.images[0] is a full URL or make it absolute
        if (article.images[0].startsWith("http")) {
          imageUrl = article.images[0];
        } else {
          imageUrl = `${siteUrl}${
            article.images[0].startsWith("/") ? "" : "/"
          }${article.images[0]}`;
        }
      }
      // The previous sitemap-news.xml used a random banner.
      // Using a more specific image if available, or a consistent fallback.

      return {
        loc: articleUrl,
        lastmod: pubDate.toISOString(),
        changefreq: "daily", // Or "weekly"/"monthly" depending on news update frequency
        priority: 0.7, // Adjust as needed
        // Standard image sitemap extension
        "image:image": `
          <image:loc>${imageUrl}</image:loc>
          <image:title>${sanitize(
            article.title || "Not√≠cia de Cultura Cardedeu"
          )}</image:title>
        `,
        // Note: Google News specific tags like <news:news> are not directly supported by next-sitemap's basic fields.
        // If those are strictly necessary, manual XML generation or a different library would be needed.
      };
    });

    return getServerSideSitemap(ctx, fields);
  } catch (error) {
    console.error("Error generating news sitemap:", error);
    // Handle error appropriately, perhaps return an empty sitemap or re-throw
    // For now, returning an empty sitemap to avoid breaking the build
    return getServerSideSitemap(ctx, []);
  }
};

// This export is needed for next-sitemap to recognize this as a dynamic sitemap.
export default function NewsSitemap() {}
